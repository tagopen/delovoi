// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$call-name: 'call'
$call-x: 110px
$call-y: 0px
$call-offset-x: -110px
$call-offset-y: 0px
$call-width: 20px
$call-height: 20px
$call-total-width: 130px
$call-total-height: 88px
$call-image: 'sprite.png'
$call: (110px, 0px, -110px, 0px, 20px, 20px, 130px, 88px, 'sprite.png', 'call', )
$headingborder-name: 'headingborder'
$headingborder-x: 0px
$headingborder-y: 0px
$headingborder-offset-x: 0px
$headingborder-offset-y: 0px
$headingborder-width: 100px
$headingborder-height: 11px
$headingborder-total-width: 130px
$headingborder-total-height: 88px
$headingborder-image: 'sprite.png'
$headingborder: (0px, 0px, 0px, 0px, 100px, 11px, 130px, 88px, 'sprite.png', 'headingborder', )
$headingborderfff-name: 'headingborderfff'
$headingborderfff-x: 0px
$headingborderfff-y: 21px
$headingborderfff-offset-x: 0px
$headingborderfff-offset-y: -21px
$headingborderfff-width: 100px
$headingborderfff-height: 11px
$headingborderfff-total-width: 130px
$headingborderfff-total-height: 88px
$headingborderfff-image: 'sprite.png'
$headingborderfff: (0px, 21px, 0px, -21px, 100px, 11px, 130px, 88px, 'sprite.png', 'headingborderfff', )
$lefthead-name: 'lefthead'
$lefthead-x: 0px
$lefthead-y: 77px
$lefthead-offset-x: 0px
$lefthead-offset-y: -77px
$lefthead-width: 35px
$lefthead-height: 11px
$lefthead-total-width: 130px
$lefthead-total-height: 88px
$lefthead-image: 'sprite.png'
$lefthead: (0px, 77px, 0px, -77px, 35px, 11px, 130px, 88px, 'sprite.png', 'lefthead', )
$righthead-name: 'righthead'
$righthead-x: 30px
$righthead-y: 42px
$righthead-offset-x: -30px
$righthead-offset-y: -42px
$righthead-width: 36px
$righthead-height: 11px
$righthead-total-width: 130px
$righthead-total-height: 88px
$righthead-image: 'sprite.png'
$righthead: (30px, 42px, -30px, -42px, 36px, 11px, 130px, 88px, 'sprite.png', 'righthead', )
$scrolldown-name: 'scrolldown'
$scrolldown-x: 110px
$scrolldown-y: 30px
$scrolldown-offset-x: -110px
$scrolldown-offset-y: -30px
$scrolldown-width: 14px
$scrolldown-height: 6px
$scrolldown-total-width: 130px
$scrolldown-total-height: 88px
$scrolldown-image: 'sprite.png'
$scrolldown: (110px, 30px, -110px, -30px, 14px, 6px, 130px, 88px, 'sprite.png', 'scrolldown', )
$zoom-name: 'zoom'
$zoom-x: 0px
$zoom-y: 42px
$zoom-offset-x: 0px
$zoom-offset-y: -42px
$zoom-width: 20px
$zoom-height: 25px
$zoom-total-width: 130px
$zoom-total-height: 88px
$zoom-image: 'sprite.png'
$zoom: (0px, 42px, 0px, -42px, 20px, 25px, 130px, 88px, 'sprite.png', 'zoom', )
$spritesheet-width: 130px
$spritesheet-height: 88px
$spritesheet-image: 'sprite.png'
$spritesheet-sprites: ($call, $headingborder, $headingborderfff, $lefthead, $righthead, $scrolldown, $zoom, )
$spritesheet: (130px, 88px, 'sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
